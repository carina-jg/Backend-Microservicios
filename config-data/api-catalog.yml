server:
  port: ${PORT:${SERVER_PORT:0}}

spring:
  application:
    name: api-catalog
  rabbitmq:
    username: guest
    password: guest
    host: localhost
    port: 5672
  zipkin:
    baseUrl: http://localhost:9411/
    enabled: true
  data:
    mongodb:
      username: usr-catalog-mongo
      password: pwd-catalog-mongo
      database: catalog-dev-mongo
      port: 27018
      host: localhost

eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceURL:
      defaultZone: http://localhost:8761/eureka

management:
  endpoints:
    web:
      exposure:
        include: info
  info:
    env:
      enabled: true

info:
  app:
    name: catalog-service
    description: Movies catalog
    version: 1.0.0

resilience4j.circuitbreaker:
  instances:
    clientMovie:
      allowHealthIndicatorToFail: false
      registerHealthIndicator: true
      slidingWindowSize: 5
      permittedNumberOfCallsInHalfOpenState: 3
      slidingWindowType: TIME_BASED
      minimumNumberOfCalls: 20
      waitDurationInOpenState: 50s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10
    clientSerie:
      allowHealthIndicatorToFail: false
      registerHealthIndicator: true
      slidingWindowSize: 5
      permittedNumberOfCallsInHalfOpenState: 3
      slidingWindowType: TIME_BASED
      minimumNumberOfCalls: 20
      waitDurationInOpenState: 50s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10

resilience4j.retry:
  instances:
    retryMovie:
      maxAttempts: 3
      waitDuration: 10s
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.io.IOException
    retrySerie:
      maxAttempts: 3
      waitDuration: 10s
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.io.IOException